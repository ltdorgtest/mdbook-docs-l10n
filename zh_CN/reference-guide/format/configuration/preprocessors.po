msgid ""
msgstr ""
"Project-Id-Version: mdBook Documentation\n"
"POT-Creation-Date: 2025-09-30T06:22:33Z\n"
"PO-Revision-Date: \n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: src/format/configuration/preprocessors.md:1
msgid "Configuring Preprocessors"
msgstr ""

#: src/format/configuration/preprocessors.md:3
msgid ""
"Preprocessors are extensions that can modify the raw Markdown source before "
"it gets sent to the renderer."
msgstr ""

#: src/format/configuration/preprocessors.md:5
msgid "The following preprocessors are built-in and included by default:"
msgstr ""

#: src/format/configuration/preprocessors.md:7
msgid ""
"`links`: Expands the `{{ #playground }}`, `{{ #include }}`, and "
"`{{ #rustdoc_include }}` handlebars helpers in a chapter to include the "
"contents of a file. See [Including files](../mdbook.md#including-files) for "
"more."
msgstr ""

#: src/format/configuration/preprocessors.md:10
msgid ""
"`index`: Convert all chapter files named `README.md` into `index.md`. That "
"is to say, all `README.md` would be rendered to an index file `index.html` "
"in the rendered book."
msgstr ""

#: src/format/configuration/preprocessors.md:14
msgid ""
"The built-in preprocessors can be disabled with the [`build.use-default-"
"preprocessors`](general.md#build-options) config option."
msgstr ""

#: src/format/configuration/preprocessors.md:16
msgid ""
"The community has developed several preprocessors. See the [Third Party "
"Plugins](https://github.com/rust-lang/mdBook/wiki/Third-party-plugins) wiki "
"page for a list of available preprocessors."
msgstr ""

#: src/format/configuration/preprocessors.md:19
msgid ""
"For information on how to create a new preprocessor, see the [Preprocessors "
"for Developers](../../for_developers/preprocessors.md) chapter."
msgstr ""

#: src/format/configuration/preprocessors.md:26
msgid "Custom Preprocessor Configuration"
msgstr ""

#: src/format/configuration/preprocessors.md:28
msgid ""
"Preprocessors can be added by including a `preprocessor` table in `book."
"toml` with the name of the preprocessor. For example, if you have a "
"preprocessor called `mdbook-example`, then you can include it with:"
msgstr ""

#: src/format/configuration/preprocessors.md:35
msgid "With this table, mdBook will execute the `mdbook-example` preprocessor."
msgstr ""

#: src/format/configuration/preprocessors.md:37
msgid ""
"This table can include additional key-value pairs that are specific to the "
"preprocessor. For example, if our example preprocessor needed some extra "
"configuration options:"
msgstr ""

#: src/format/configuration/preprocessors.md:45
msgid "Locking a Preprocessor dependency to a renderer"
msgstr ""

#: src/format/configuration/preprocessors.md:47
msgid ""
"You can explicitly specify that a preprocessor should run for a renderer by "
"binding the two together."
msgstr ""

#: src/format/configuration/preprocessors.md:50
msgid ""
"```toml\n"
"[preprocessor.example]\n"
"renderers = [\"html\"]  # example preprocessor only runs with the HTML "
"renderer\n"
"```"
msgstr ""

#: src/format/configuration/preprocessors.md:55
msgid "Provide Your Own Command"
msgstr ""

#: src/format/configuration/preprocessors.md:57
msgid ""
"By default when you add a `[preprocessor.foo]` table to your `book.toml` "
"file, `mdbook` will try to invoke the `mdbook-foo` executable. If you want "
"to use a different program name or pass in command-line arguments, this "
"behaviour can be overridden by adding a `command` field."
msgstr ""

#: src/format/configuration/preprocessors.md:62
msgid ""
"```toml\n"
"[preprocessor.random]\n"
"command = \"python random.py\"\n"
"```"
msgstr ""

#: src/format/configuration/preprocessors.md:67
msgid "Require A Certain Order"
msgstr ""

#: src/format/configuration/preprocessors.md:69
msgid ""
"The order in which preprocessors are run can be controlled with the `before` "
"and `after` fields. For example, suppose you want your `linenos` "
"preprocessor to process lines that may have been `{{#include}}`d; then you "
"want it to run after the built-in `links` preprocessor, which you can "
"require using either the `before` or `after` field:"
msgstr ""

#: src/format/configuration/preprocessors.md:72
msgid ""
"```toml\n"
"[preprocessor.linenos]\n"
"after = [ \"links\" ]\n"
"```"
msgstr ""

#: src/format/configuration/preprocessors.md:77
msgid "or"
msgstr ""

#: src/format/configuration/preprocessors.md:79
msgid ""
"```toml\n"
"[preprocessor.links]\n"
"before = [ \"linenos\" ]\n"
"```"
msgstr ""

#: src/format/configuration/preprocessors.md:84
msgid ""
"It would also be possible, though redundant, to specify both of the above in "
"the same config file."
msgstr ""

#: src/format/configuration/preprocessors.md:86
msgid ""
"Preprocessors having the same priority specified through `before` and "
"`after` are sorted by name. Any infinite loops will be detected and produce "
"an error."
msgstr ""
