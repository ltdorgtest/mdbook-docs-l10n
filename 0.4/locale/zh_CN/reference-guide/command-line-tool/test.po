msgid ""
msgstr ""
"Project-Id-Version: mdBook Documentation\n"
"POT-Creation-Date: 2025-09-30T06:22:33Z\n"
"PO-Revision-Date: \n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: src/cli/test.md:1
msgid "The test command"
msgstr ""

#: src/cli/test.md:3
msgid ""
"When writing a book, you sometimes need to automate some tests. For example, "
"[The Rust Programming Book](https://doc.rust-lang.org/stable/book/) uses a "
"lot of code examples that could get outdated. Therefore it is very important "
"for them to be able to automatically test these code examples."
msgstr ""

#: src/cli/test.md:8
msgid ""
"mdBook supports a `test` command that will run all available tests in a "
"book. At the moment, only Rust tests are supported."
msgstr ""

#: src/cli/test.md:11
msgid "Disable tests on a code block"
msgstr ""

#: src/cli/test.md:13
msgid "rustdoc doesn't test code blocks which contain the `ignore` attribute:"
msgstr ""

#: src/cli/test.md:19
msgid ""
"rustdoc also doesn't test code blocks which specify a language other than "
"Rust:"
msgstr ""

#: src/cli/test.md:25
msgid "rustdoc _does_ test code blocks which have no language specified:"
msgstr ""

#: src/cli/test.md:31
msgid "Specify a directory"
msgstr ""

#: src/cli/test.md:33
msgid ""
"The `test` command can take a directory as an argument to use as the book's "
"root instead of the current working directory."
msgstr ""

#: src/cli/test.md:40
msgid "`--library-path`"
msgstr ""

#: src/cli/test.md:42
msgid ""
"The `--library-path` (`-L`) option allows you to add directories to the "
"library search path used by `rustdoc` when it builds and tests the examples. "
"Multiple directories can be specified with multiple options (`-L foo -L "
"bar`) or with a comma-delimited list (`-L foo,bar`). The path should point "
"to the Cargo [build cache](https://doc.rust-lang.org/cargo/guide/build-cache."
"html) `deps` directory that contains the build output of your project. For "
"example, if your Rust project's book is in a directory named `my-book`, the "
"following command would include the crate's dependencies when running `test`:"
msgstr ""

#: src/cli/test.md:54
msgid ""
"See the `rustdoc` command-line [documentation](https://doc.rust-lang.org/"
"rustdoc/command-line-arguments.html#-l--library-path-where-to-look-for-"
"dependencies) for more information."
msgstr ""

#: src/cli/test.md:57
msgid "`--dest-dir`"
msgstr ""

#: src/cli/test.md:59
msgid ""
"The `--dest-dir` (`-d`) option allows you to change the output directory for "
"the book. Relative paths are interpreted relative to the book's root "
"directory. If not specified it will default to the value of the `build.build-"
"dir` key in `book.toml`, or to `./book`."
msgstr ""

#: src/cli/test.md:64
msgid "`--chapter`"
msgstr ""

#: src/cli/test.md:66
msgid ""
"The `--chapter` (`-c`) option allows you to test a specific chapter of the "
"book using the chapter name or the relative path to the chapter."
msgstr ""
